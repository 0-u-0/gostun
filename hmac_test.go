package gostun

import (
	"testing"

	"git.learning-tech.cn/realtimecat/gostun/libs"
	"crypto/md5"
	"encoding/hex"
)

func GetMD5Hash(text string) string {
	hasher := md5.New()
	hasher.Write([]byte(text))
	return hex.EncodeToString(hasher.Sum(nil))
}


func Test_Hmac(t *testing.T) {
	content := []byte{
		0x01,0x03,0x00,0x58,
		0x21,0x12,0xa4,0x42,
		0x75,0x2f,0x75,0x53,
		0x6d,0x50,0x46,0x58,
		0x4a,0x30,0x6c,0x56,
		0x00,0x16,0x00,0x08,
		0x00,0x01,0xa3,0x27,
		0x37,0x04,0xb2,0x54,
		0x00,0x20,0x00,0x08,
		0x00,0x01,0xf6,0x72,
		0x2a,0x19,0xaf,0x49,
		0x00,0x0d,0x00,0x04,
		0x00,0x00,0x02,0x58,
		0x80,0x22,0x00,0x1c,
		0x45,0x78,0x61,0x6d,
		0x70,0x6c,0x65,0x20,
		0x73,0x65,0x72,0x76,
		0x65,0x72,0x2c,0x20,
		0x76,0x65,0x72,0x73,
		0x69,0x6f,0x6e,0x20,
		0x31,0x2e,0x31,0x37,
		0x00,0x08,0x00,0x14,
	}

	key := []byte{
		0x84,0x93,0xfb,0xc5,
		0x3b,0xa5,0x82,0xfb,
		0x4c,0x04,0x4c,0x45,
		0x6b,0xdc,0x40,0xeb}



	mac := libs.MessageIntegrityHmac(content,key)


	t.Logf("\n cap : %d \n content : %x \n key : %x \n mac : %x \n",
		cap(content),content,key,mac)
}

func Test_Md5(t *testing.T)  {

	hasher := md5.New()
	hasher.Write([]byte("user:realm:pass"))
	s := hex.EncodeToString(hasher.Sum(nil))


	key := []byte{
		0x35,0xbb,0x24,0x0f,
		0x16,0xc0,0x11,0xbd,
		0x47,0x5e,0x95,0xe7,
		0x02,0x10,0xda,0x4f,
	}

	t.Logf("md5 %x ",)
}